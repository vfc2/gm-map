// This script ensures the correct base path is set for the build
// It's needed to make PR previews work correctly on GitHub Pages

// Load the BASE_PATH from environment or .env file
import { config } from 'dotenv';
import fs from 'fs';
import path from 'path';

// Load .env file if exists
config();

// Get the base path
const basePath = process.env.BASE_PATH || '';

console.log(`Configuring build with base path: ${basePath}`);

// Always ensure we have a static folder
if (!fs.existsSync('./static')) {
	fs.mkdirSync('./static', { recursive: true });
}

// Create path-config.js file regardless of whether basePath is set
// This ensures consistent behavior in all environments
const runtimeConfig = `
// This file is auto-generated by prepare-build.js
window.APP_BASE_PATH = "${basePath}";
console.log('Path config loaded with BASE_PATH:', "${basePath}");

// Monitor SvelteKit initialization
(function() {
  let attempts = 0;
  const maxAttempts = 10;
  const interval = setInterval(() => {
    attempts++;
    try {
      // Try to access SvelteKit paths
      const sveltekit = window.__sveltekit_d4phgb;
      if (sveltekit) {
        console.log('SvelteKit initialized with paths:', JSON.stringify(sveltekit));
        clearInterval(interval);
      } else if (attempts >= maxAttempts) {
        console.warn('SvelteKit not initialized after', attempts, 'attempts');
        clearInterval(interval);
      }
    } catch (e) {
      console.warn('Error checking SvelteKit initialization:', e);
      if (attempts >= maxAttempts) clearInterval(interval);
    }
  }, 500);
})();
`;

fs.writeFileSync('./static/path-config.js', runtimeConfig);
console.log('Created path-config.js with runtime base path configuration');

// Create or update .env file with the base path
fs.writeFileSync('.env', `PUBLIC_BASE_PATH=${basePath}`);
console.log('Updated .env file with PUBLIC_BASE_PATH');

// Create or modify 404.html for GitHub Pages if it doesn't exist
// This ensures SPA routing works correctly
if (!fs.existsSync('./static/404.html')) {
	console.log('Creating basic 404.html file for GitHub Pages SPA routing');
	const template404 = fs.readFileSync(path.join('static', '404.html'), 'utf-8');
	fs.writeFileSync('./static/404.html', template404);
}

// If we're in a PR preview environment, create a nojekyll file
// This prevents GitHub Pages from processing the site with Jekyll
if (basePath && basePath.includes('/pr-preview/')) {
	fs.writeFileSync('./static/.nojekyll', '');
	console.log('Created .nojekyll file to prevent Jekyll processing');
}
