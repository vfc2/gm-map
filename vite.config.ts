import { sveltekit } from '@sveltejs/kit/vite';
import { defineConfig, loadEnv } from 'vite';
import fs from 'fs';

export default defineConfig(({ mode }) => {
	// Load env variables based on mode
	const env = loadEnv(mode, process.cwd(), '');
	const basePath = env.PUBLIC_BASE_PATH || '';

	// Always create or update the path-config.js file to ensure consistency
	if (!fs.existsSync('./static')) {
		fs.mkdirSync('./static', { recursive: true });
	}

	const runtimeConfigContent = `
// Auto-generated by vite.config.ts
window.APP_BASE_PATH = "${basePath}";
console.log("Vite runtime path config loaded with base path:", "${basePath}");
`;

	fs.writeFileSync('./static/path-config.js', runtimeConfigContent);
	console.log('Created/updated path-config.js with base path:', basePath);

	// Create .nojekyll file for GitHub Pages
	fs.writeFileSync('./static/.nojekyll', '');

	return {
		plugins: [sveltekit()],
		// Let SvelteKit handle base path via kit.paths.base
		build: {
			emptyOutDir: true,
			sourcemap: true,
			// Ensure the build is compatible with GitHub Pages
			target: 'es2020',
			// Ensure proper handling of assets
			rollupOptions: {
				output: {
					// Make asset URLs deterministic and properly include the base path
					assetFileNames: 'assets/[name]-[hash][extname]',
					chunkFileNames: 'chunks/[name]-[hash].js',
					entryFileNames: 'entries/[name]-[hash].js'
				}
			}
		},
		server: {
			fs: {
				// Allow serving files from the entire workspace
				allow: ['.']
			}
		}
	};
});
